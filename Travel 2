from itertools import permutations

def tsp_brute_force(graph):
    n = len(graph)
    min_cost = float('inf')
    optimal_path = None
    for perm in permutations(range(1, n)):
        current_cost = graph[0][perm[0]]
        for i in range(len(perm) - 1):
            current_cost += graph[perm[i]][perm[i + 1]]
        current_cost += graph[perm[-1]][0]
        if current_cost < min_cost:
            min_cost = current_cost
            optimal_path = [0] + list(perm) + [0]
    return min_cost, optimal_path

graph = [[0, 10, 15, 20], [10, 0, 35, 25], [15, 35, 0, 30], [20, 25, 30, 0]]
min_cost, optimal_path = tsp_brute_force(graph)
print("Minimum cost:", min_cost)
print("Optimal path:", optimal_path)
